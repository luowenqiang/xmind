<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee ="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jee       http://www.springframework.org/schema/jee/spring-jee.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/security/oauth2   http://www.springframework.org/schema/security/spring-security-oauth2.xsd">
   
    <!--使用注解自动配置Bean-->
    <context:annotation-config/>
    <security:global-method-security pre-post-annotations="enabled">
    </security:global-method-security>
    
    <!-- 不需要进行认证的资源，3.0之后才改为这样配置 -->
    <security:http security="none" pattern="/wb_07af44511a0ef5f0.txt" />
    <security:http security="none" pattern="/identity/login" />
    <security:http security="none" pattern="/identity/register" />
    <security:http security="none" pattern="/identity/active" />
    <security:http security="none" pattern="/static/**" />
    <security:http security="none" pattern="/weixin/**" />
    <!--<security:http security="none" pattern="/tweet/**" />-->
    <!-- 默认 /j_spring_security_logout 登陆 -->
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/**" access="hasRole('user')" />
        <security:form-login login-page='/identity/login' 
                             login-processing-url="/identity/do_login" 
                             default-target-url='/index.jsp'/>
        
        <!--增加OAuth2的客户端过滤器，以便使用OAuth协议-->
        <!--<security:anonymous />-->
        <security:custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER" />
        <!--<security:custom-filter ref="oauth2AuthenticationFilter" before="FORM_LOGIN_FILTER" />-->
        
        <security:logout logout-success-url="/identity/login" logout-url="/identity/do_logout"/>  
        <security:remember-me user-service-ref="manualUserDetailsService"/>
    </security:http>
    
    <!-- 权限管理操作 --> 
    <security:authentication-manager>
        <security:authentication-provider ref="authenticationProvider">
        </security:authentication-provider>
    </security:authentication-manager>
    
    <!--apply the oauth client context -->
    <oauth2:client id="oauth2ClientFilter" />
    
    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="manualUserDetailsService" />
        <property name="hideUserNotFoundExceptions" value="false" />
        <property name="passwordEncoder" ref="multiPasswordEncoder" />
    </bean>
    <bean id="bCryptpasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
    <bean id="standardPasswordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"></bean>
    
    <!-- JDBC实现的UserDetailsService，直接执行select语句查询数据库里面的权限配置 -->
    <!-- <bean id="scskUserDetailsService"  
          class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">  
        <property name="dataSource" ref="dataSource" />  
        <property name="usersByUsernameQuery"  
                  value="select t.account, t.password, decode(status, 0, 1, 0) as status from U_USERS t where t.account = ?" />  
        <property name="authoritiesByUsernameQuery"  
                  value="select t.account, t.user_role from U_USERS t where t.account = ?" />  
    </bean>-->
</beans>
